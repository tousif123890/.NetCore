<form id="searchform" asp-action="weathersearch">
    <div class="form-group">
        <label asp-for="@Model.SearchTerm" class="control-label"></label>
        
    </div>
    <input type="submit" value="Search" class="btn btn-primary" />
</form>

 [HttpPost]
        public async Task<IActionResult> WeatherSearch(
            string cityName,
            string cityIdHidden,
            string cityNameHidden,
            string stateHidden,
            string countryHidden)
        {
            if (ModelState.IsValid)
            {
                var apiKey = _config.GetValue<string>("OpenWeatherMapAPIKey");
                object weatherInfoDTO = null;

                var hiddenSearchTerm = stateHidden == null ? cityNameHidden + ", " + countryHidden : cityNameHidden + ", " + stateHidden + ", " + countryHidden;

                if (cityName == null)
                {
                    TempData["Weather_Info"] = "invalid city name";
                    TempData.Keep("Weather_Info");
                    return RedirectToAction("CurrentWeather", "Home");
                }
                else if (hiddenSearchTerm == cityName)
                {
                    int id;
                    Int32.TryParse(cityIdHidden, out id);

                    weatherInfoDTO = await _weatherService.GetCurrentWeather(
                        apiKey: apiKey,
                        cityId: id,
                        cityName: cityName);
                }
                else if (hiddenSearchTerm != cityName)
                {
                    var splitDirectCityName = cityName.Split(",");

                    if (splitDirectCityName.Length == 3)
                    {
                        var cityRecord = _context.Cities.Where(n => n.Name == splitDirectCityName[0] && n.State == splitDirectCityName[1] && n.Country == splitDirectCityName[2]).FirstOrDefault();

                        if (cityRecord == null)
                        {
                            TempData["Weather_Info"] = "invalid city name";
                            TempData.Keep("Weather_Info");
                            return RedirectToAction("CurrentWeather", "Home");
                        }
                        else
                        {
                            weatherInfoDTO = await _weatherService.GetCurrentWeather(apiKey: apiKey, cityId: cityRecord.Id, cityName: cityName);
                        }
                    }
                    else if (splitDirectCityName.Length == 2)
                    {
                        var cityRecord = _context.Cities.Where(n => n.Name == splitDirectCityName[0] && (n.State == splitDirectCityName[1] || n.Country == splitDirectCityName[1])).FirstOrDefault();

                        weatherInfoDTO = await _weatherService.GetCurrentWeather(apiKey: apiKey, cityId: cityRecord.Id, cityName: cityName);
                    }
                    else
                    {
                        weatherInfoDTO = await _weatherService.GetCurrentWeather(apiKey: apiKey, cityName: cityName);
                    }
                }

                if (weatherInfoDTO.GetType() == typeof(string))
                {
                    TempData["Weather_Info"] = weatherInfoDTO.ToString();
                    TempData.Keep("Weather_Info");
                    return RedirectToAction("CurrentWeather", "Home");
                }
                else
                {
                    TempData["Weather_Info"] = JsonConvert.SerializeObject(weatherInfoDTO);
                    TempData.Keep("Weather_Info");
                    return RedirectToAction("CurrentWeather", "Home");
                }
            }

            return RedirectToAction("Index");
        }


        ///////////////////////////////////////////////////////////////////

        //$(function () {
//    $("#searchterm").autocomplete({
//        source: function (request, response) {
//            $.ajax({
//                url: "/Home/GetAutocompleteList",
//                data: { "cityname": request.term },
//                type: "POST",
//                success: function (data) {
//                    response($.map(data, function (item) {
//                        return {
//                            label: item.name,
//                            value: item.id,
//                            json: item
//                        }
//                    }))
//                },
//                error: function (XMLHttpRequest, textStatus, errorThrown) {
//                    alert(textStatus);
//                }
//            });
//        },
//        focus: function (event, ui) {
//            $('#cityname').val(ui.item.value);
//            return false;
//        },
//        select: function (event, ui) {
//         //  $('#cityid').val(ui.item.CityId);
//            $('#cityname').val(ui.item.value);
//            return false;
//        },
//    }).data("ui-autocomplete")._renderItem = function (ul, item) {
//        return $("<li></li>")
//            .append("<a>" + item.label + "," + item.value+ "</a>")
//            .appendTo(ul);
//    };
//});



                                                    //$(function () {
                                                    //    $("#searchterm").autocomplete({
                                                    //        source: function (request, response) {
                                                    //            $.ajax({
                                                    //                url: '/Home/GetAutocompleteList',
                                                    //                data: { "cityname": request.term },
                                                    //                type: "POST",
                                                    //                success: function (data) {
                                                    //                    response($.map(data, function (item) {
                                                    //                        return { label: item.name, value: item.name + "," + item.id }
                                                    //                    }))
                                                    //                },
                                                    //                error: function (response) {
                                                    //                    alert(response.responseText);
                                                    //                },
                                                    //                failure: function (response) {
                                                    //                    alert(response.responseText);
                                                    //                }
                                                    //            });
                                                    //        },
                                                    //        select: function (event, ui) {
                                                    //            $('#cityid').val(ui.item.value);
                                                    //            $('#cityname').val(ui.item.value);
                                                    //            return false;
                                                    //            },

                                                    //        minLength: 3
                                                    //    }).data("ui-autocomplete")._renderItem = function (ul, item) {
                                                    //        return $("<li></li>")
                                                    //            .append("<a>"+ item.value + "</a>")
                                                    //            .appendTo(ul);
                                                    //    };
                                                    //});